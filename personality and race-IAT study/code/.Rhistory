labs(title = "Relationship: Self report and AMP",x = "AMP score", y = "Mean self-reported evaluation")+
theme_linedraw()
labelledplotfinal <- labelledplot + geom_text_repel() + labs(title = "Relationship: Self report and AMP with labeled points")
labelledplotfinal
#Informsation from the cours abeout colors
colors <- viridis_pal(begin = 0.0, end = 1.0, option = "mako")(10)
show_col(colors)
from <- c(xmin = 0.55, xmax = 0.65, ymin = 0.85, ymax = 1.1)
to <- c(xmin = 0.0, xmax = 0.30, ymin = 4, ymax = 4.75)
ggmagnifyplot <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation)) +
geom_point(color = "#D95F02")+ geom_magnify(from = from, to = to)+
labs(title = "Relationship: Self report and AMP with magnify areas",x = "AMP score", y = "Mean self-reported evaluation")+
theme_linedraw()
ggmagnifyplot
cat("From the plots it looks like only AMP evaluations are approx. normally distributed, whereas self reported evaluations are not.\n  Therefore, instead of a pearson test,I use the spearman test to investigate the correlation between these two variables.\n  The p-value (0.2) is rather large, so we cannot reject the hypotheses that the two variables are not correlated.\n  The results suggest that both variables are not correlated.")
cortest<-cor.test(data_processed_after_exclusions$mean_evaluation, data_processed_after_exclusions$AMP_score, method = "spearman", exact=FALSE)
report(cortest)
facet_order <- c( "male", "female","nonbinary")
legend_labels <- c( "Female", "Female","Non-Binary")
dark2_colors <- brewer.pal(3, "Dark2")
# split histogram plot
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, fill = gender)) +
geom_histogram(binwidth = 0.2, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$mean_evaluation), max(data_processed_after_exclusions$mean_evaluation))) +
facet_wrap(~ gender, scales = "free") +
labs(title = "Histogram of self-reported mean evaluation by Gender with free scales", x = "Self-reported mean evaluation", y = "Frequency") +
scale_fill_manual(values = dark2_colors)+
guides(fill = FALSE)+
theme_bw()
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, fill = gender)) +
geom_histogram(binwidth = 0.2, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$mean_evaluation), max(data_processed_after_exclusions$mean_evaluation))) +
facet_wrap(~ gender, scales = "fixed") +
labs(title = "Histogram of self-reported mean evaluation by Gender with fixed
scales", x = "Self-reported mean evaluation", y = "Frequency") +
scale_fill_manual(values = dark2_colors)+
guides(fill = FALSE) +
theme_bw()
#rviolin plot
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_violin() +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation") +
guides(fill = FALSE) +
theme_bw()
#raincloud plot
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
stat_halfeye(adjust = 0.5,justification = -0.2, .width = 0,point_colour = NA) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of self-report mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation")+
geom_boxplot(width = .1, outlier.shape = NA) +
ggdist::stat_dots(side = "left", dotsize = .4, justification = 1.1,color="black", binwidth = .1)+
theme_bw() +
guides(fill = FALSE) +
coord_flip()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of self-report mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation")+
guides(fill = FALSE) +
coord_flip()+
theme_bw()
cat("Assumption from plots: self reported evaluations are NOT normally distributed. Therefore, I used the Wilcoxon rank-sum test")
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$mean_evaluation))
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$mean_evaluation))
# Wilcoxon rank-sum test
wilcox_test_result <- wilcox.test(mean_evaluation ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'), exact=FALSE)
wilcox_test_result
# Results suggest that there is a difference in self reported evaluations between male and female
cat("A Wilcoxon rank-sum test was conducted to compare self-reported mean evaluation scores between male and female participants. The results revealed a statistically significant difference (W = 622.5, p = 0.002773), indicating that the distributions of self-reported mean evaluation scores are not equal for males and females. This supports the alternative hypothesis that the true location shift is not equal to 0. In summary, there is a significant difference in self-reported mean evaluation between male and female participants.")
#additional task: calculate the alphabet
alpha(subset(data_processed_after_exclusions, select = c(prefer, like, positive)), check.keys =TRUE)
c("alpha=0.876904")
#First order and labeling (first version)
facet_order_1 <- c( "female", "male","nonbinary")
facet_labels_1 <- c( "Female", "Male","Non-Binary")
#Second order and labeling (second version)
facet_order_2 <- c( "male", "female","nonbinary")
facet_labels_2 <- c( "male", "female","non-binary")
#Histogram with the first version of facet_order and facet_labels
cat("Histogram with the first version of facet_order and facet_labels")
histogramplot_AMP_1 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs(title = "Histogram of AMP_score by Gender", x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw()
histogramplot_AMP_1
#Histogram with the second version of facet_order and facet_labels
cat("Histogram with the second version of facet_order and facet_labels")
histogramplot_AMP_2 <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs(title = "Histogram of AMP_score by Gender", x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_2, labels=facet_labels_2)+
theme_bw()
histogramplot_AMP_2
histogramplot_AMP_1 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs(title = "Histogram of AMP_score by Gender", x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw() +
guides(fill = FALSE)
histogramplot_AMP_1
#Violin plot with the first version of facet_order and facet_labels
cat("Violin plot with the first version of facet_order and facet_labels.")
violin_AMP_1<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw()  +
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "AMP score")
violin_AMP_1
#Violin plot with the second version of facet_order and facet_labels
cat("Violin plot with the second version of facet_order and facet_labels.")
violin_AMP_2<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_2, labels=facet_labels_2)+
theme_bw()  +
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "AMP score")
violin_AMP_2
violin_AMP_2<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_2, labels=facet_labels_2)+
theme_bw()  +
guides(fill = FALSE) +
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "AMP score")
violin_AMP_2
#Split raincloud plot
raincloudplot_AMP_h <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of AMP_score by Gender", x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
coord_flip()+
guides(fill = FALSE) +
theme_bw()
raincloudplot_AMP_h
raincloudplot_AMP <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of AMP_score by Gender", x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
theme_bw()
raincloudplot_AMP <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of AMP_score by Gender", x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
coord_flip()+
guides(fill = FALSE) +
theme_bw()
# Assumption from plots: AMP Score is approx. normally distributed, plus we have a sample size > 30, so that the t-test can be performed
# Using the t-test to see if AMP_score are different between men and woman
# Both tests confirm the non-normal distribution
# Perform a t-test
t_test_result <- t.test(AMP_score ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'))
report(t_test_result)
# Results suggest there is no significant difference in AMP scores between male and female
# Shapiro-Wilk Test for normal distribution (male)
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$AMP_score))
# Shapiro-Wilk Test for normal distribution (female)
print(shapiro.test(subset(data_processed_after_exclusions, gender=='female')$AMP_score))
# Wilcoxon rank-sum test
wilcox_test_result <- wilcox.test(AMP_score ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'), exact=FALSE)
wilcox_test_result
combineplot<-histogramplot_AMP_1/violin_AMP_1/raincloudplot_AMP
combineplot<-((histogramplot_AMP_1 / violin_AMP_1)|raincloudplot_AMP_h)
#or
#combineplot<-grid.arrange(histogramplot_AMP_1,violin_AMP_1,raincloudplot_AMP, ncol = 1)
combineplot
dir.create("../plot/")
ggsave("../plot/combineplot.png",dpi = 300,combineplot)
ggsave("../plot/combineplot.pdf",dpi = 300,combineplot)
#or as the other plots
ggsave("../code/analysis_files/figure-html/combineplot.png",dpi = 300,combineplot)
ggsave("../code/analysis_files/figure-html/combineplot.pdf",dpi = 300,combineplot)
sessionInfo()
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(patchwork)
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(scales)
library(RColorBrewer)
library(ggplot2)
library(ggridges)
library(ggrain)
library(gridExtra)
library(psych)
library(ggExtra)
library(ggrepel)
library(ggdist)
library(report)
library(ggmagnify)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed_after_exclusions <- data_processed |>
filter(exclude_participant == "include")
data_processed
data_processed |>
count(name = "n") |>
kable() |>
add_header_above(header = c("Whole sample" = 1)) |> # note that you can add header rows to tables like this. The "1" indicates the number of columns the header should span. The sum of these numbers must equal the number of columns or you'll get an error.
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
count(name = "n") |>
kable() |>
add_header_above(header = c("For analysis" = 1)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
mutate(age = as.numeric(age)) |>
summarise(Mean = mean(age, na.rm = TRUE),
SD = sd(age, na.rm = TRUE)) |>
mutate_all(.funs = janitor::round_half_up, digits = 1) |>
kable() |>
add_header_above(header = c("Age" = 2)) |>
kable_classic(full_width = FALSE)
data_processed_after_exclusions |>
rename(Gender = gender) |>
group_by(Gender) |>
summarise(n = n()) |>
mutate(Percent = paste0(round_half_up((n / sum(n)) * 100, 1), "%")) |>
mutate(Gender = stringr::str_to_sentence(Gender)) |> # Change the case of the Gender variable so that it prints nicely
kable() |>
kable_classic(full_width = FALSE)
# overall self-reported evaluations
dat_mean_ratings <- data_processed_after_exclusions |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n()) |>
mutate(group = "Full sample")
# self-reported evaluations by gender category
dat_mean_ratings_by_gender <- data_processed_after_exclusions |>
group_by(group = gender) |>
summarise(Mean = mean(mean_evaluation, na.rm = TRUE),
SD = sd(mean_evaluation, na.rm = TRUE),
n = n())
# combine both into one table
bind_rows(dat_mean_ratings,
dat_mean_ratings_by_gender) |>
select(Subset = group, Mean, SD, n) |> # select variables of interest, and rename one
mutate(Subset = stringr::str_to_sentence(Subset)) |> # Change the case of the Subset variable so that it prints nicely
mutate_if(is.numeric, round_half_up, digits = 2) |>
kable() |>
add_header_above(header = c(" " = 1, "Self-reported evaluations" = 3)) |>
kable_classic(full_width = FALSE)
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation)) +
geom_histogram(binwidth = 1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("Mean self-reported evaluation") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 7)) +
coord_cartesian(xlim = c(1, 7)) +
theme(panel.grid.minor = element_blank())
ggplot(data_processed_after_exclusions, aes(x = AMP_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("AMP score") +
ylab("Frequency") +
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(y = AMP_score,
x = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
geom_smooth(method = "lm",
color = viridis_pal(begin = 0.45, option = "mako")(1)) +
ylab("AMP score") +
xlab("Mean self-reported evaluation") +
theme_linedraw()
ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation)) +
geom_jitter(color = viridis_pal(begin = 0.45, option = "mako")(1),
alpha = 0.5) +
xlab("AMP score") +
ylab("Mean self-reported evaluation") +
theme_linedraw()
facet_order <- c( "female", "male","nonbinary")
legend_labels <- c( "Female", "Male","Non-Binary")
dark2_colors <- brewer.pal(3, "Dark2")
axialhisto <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, colour = gender)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_colour_manual(name = "Gender", values = dark2_colors, breaks = facet_order, labels=legend_labels)+
labs(title = "Distribution and relationship: Self report and AMP",x = "AMP score", y = "Mean self-reported evaluation")+
theme_linedraw()
scatterPlot_axialhisto<-ggMarginal(axialhisto, type = "histogram", groupColour=TRUE, groupFill=TRUE)
scatterPlot_axialhisto
#scatterPlot_axialdensity<-ggMarginal(axialhisto, type = "density", groupColour=TRUE, groupFill=TRUE)
#scatterPlot_axialdensity
labelledplot<-ggplot(data_processed_after_exclusions,
aes(x = AMP_score,
y = mean_evaluation, label= subject))+
geom_point(color = "#D95F02")+
labs(title = "Relationship: Self report and AMP",x = "AMP score", y = "Mean self-reported evaluation")+
theme_linedraw()
labelledplotfinal <- labelledplot + geom_text_repel() + labs(title = "Relationship: Self report and AMP with labeled points")
labelledplotfinal
#Informsation from the cours abeout colors
colors <- viridis_pal(begin = 0.0, end = 1.0, option = "mako")(10)
show_col(colors)
from <- c(xmin = 0.55, xmax = 0.65, ymin = 0.85, ymax = 1.1)
to <- c(xmin = 0.0, xmax = 0.30, ymin = 4, ymax = 4.75)
ggmagnifyplot <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, y = mean_evaluation)) +
geom_point(color = "#D95F02")+ geom_magnify(from = from, to = to)+
labs(title = "Relationship: Self report and AMP with magnify areas",x = "AMP score", y = "Mean self-reported evaluation")+
theme_linedraw()
ggmagnifyplot
cat("From the plots it looks like only AMP evaluations are approx. normally distributed, whereas self reported evaluations are not.\n  Therefore, instead of a pearson test,I use the spearman test to investigate the correlation between these two variables.\n  The p-value (0.2) is rather large, so we cannot reject the hypotheses that the two variables are not correlated.\n  The results suggest that both variables are not correlated.")
cortest<-cor.test(data_processed_after_exclusions$mean_evaluation, data_processed_after_exclusions$AMP_score, method = "spearman", exact=FALSE)
report(cortest)
facet_order <- c( "male", "female","nonbinary")
legend_labels <- c( "Female", "Female","Non-Binary")
dark2_colors <- brewer.pal(3, "Dark2")
# split histogram plot
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, fill = gender)) +
geom_histogram(binwidth = 0.2, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$mean_evaluation), max(data_processed_after_exclusions$mean_evaluation))) +
facet_wrap(~ gender, scales = "free") +
labs(title = "Histogram of self-reported mean evaluation by Gender with free scales", x = "Self-reported mean evaluation", y = "Frequency") +
scale_fill_manual(values = dark2_colors)+
guides(fill = FALSE)+
theme_bw()
ggplot(data_processed_after_exclusions, aes(x = mean_evaluation, fill = gender)) +
geom_histogram(binwidth = 0.2, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$mean_evaluation), max(data_processed_after_exclusions$mean_evaluation))) +
facet_wrap(~ gender, scales = "fixed") +
labs(title = "Histogram of self-reported mean evaluation by Gender with fixed
scales", x = "Self-reported mean evaluation", y = "Frequency") +
scale_fill_manual(values = dark2_colors)+
guides(fill = FALSE) +
theme_bw()
#rviolin plot
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_violin() +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation") +
guides(fill = FALSE) +
theme_bw()
#raincloud plot
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
stat_halfeye(adjust = 0.5,justification = -0.2, .width = 0,point_colour = NA) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of self-report mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation")+
geom_boxplot(width = .1, outlier.shape = NA) +
ggdist::stat_dots(side = "left", dotsize = .4, justification = 1.1,color="black", binwidth = .1)+
theme_bw() +
guides(fill = FALSE) +
coord_flip()
ggplot(data_processed_after_exclusions, aes(x = gender, y = mean_evaluation, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of self-report mean evaluation by Gender", x = "Gender", y = "Mean self-reported evaluation")+
guides(fill = FALSE) +
coord_flip()+
theme_bw()
cat("Assumption from plots: self reported evaluations are NOT normally distributed. Therefore, I used the Wilcoxon rank-sum test")
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$mean_evaluation))
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$mean_evaluation))
# Wilcoxon rank-sum test
wilcox_test_result <- wilcox.test(mean_evaluation ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'), exact=FALSE)
wilcox_test_result
# Results suggest that there is a difference in self reported evaluations between male and female
cat("A Wilcoxon rank-sum test was conducted to compare self-reported mean evaluation scores between male and female participants. The results revealed a statistically significant difference (W = 622.5, p = 0.002773), indicating that the distributions of self-reported mean evaluation scores are not equal for males and females. This supports the alternative hypothesis that the true location shift is not equal to 0. In summary, there is a significant difference in self-reported mean evaluation between male and female participants.")
#additional task: calculate the alphabet
alpha(subset(data_processed_after_exclusions, select = c(prefer, like, positive)), check.keys =TRUE)
c("alpha=0.876904")
#First order and labeling (first version)
facet_order_1 <- c( "female", "male","nonbinary")
facet_labels_1 <- c( "Female", "Male","Non-Binary")
#Second order and labeling (second version)
facet_order_2 <- c( "male", "female","nonbinary")
facet_labels_2 <- c( "male", "female","non-binary")
#Histogram with the first version of facet_order and facet_labels
cat("Histogram with the first version of facet_order and facet_labels")
histogramplot_AMP_1 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs(title = "Histogram of AMP_score by Gender", x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw()
histogramplot_AMP_1
#Histogram with the second version of facet_order and facet_labels
cat("Histogram with the second version of facet_order and facet_labels")
histogramplot_AMP_2 <- ggplot(data_processed_after_exclusions, aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs(title = "Histogram of AMP_score by Gender", x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_2, labels=facet_labels_2)+
theme_bw()
histogramplot_AMP_2
#Violin plot with the first version of facet_order and facet_labels
cat("Violin plot with the first version of facet_order and facet_labels.")
violin_AMP_1<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw()  +
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "AMP score")
violin_AMP_1
#Violin plot with the second version of facet_order and facet_labels
cat("Violin plot with the second version of facet_order and facet_labels.")
violin_AMP_2<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_2, labels=facet_labels_2)+
theme_bw()  +
labs(title = "Histogram of self-reported mean evaluation by Gender", x = "Gender", y = "AMP score")
violin_AMP_2
#Split raincloud plot
raincloudplot_AMP_h <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of AMP_score by Gender", x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
coord_flip()+
guides(fill = FALSE) +
theme_bw()
raincloudplot_AMP_h
raincloudplot_AMP <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs(title = "Raincloud Plot of AMP_score by Gender", x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
theme_bw()
histogramplot_AMP_1 <- ggplot(data_processed_after_exclusions,
aes(x = AMP_score, fill = factor(gender))) +
geom_histogram(binwidth = 0.05, color = "white", alpha = 0.8) +
coord_cartesian(xlim = c(min(data_processed_after_exclusions$AMP_score), max(data_processed_after_exclusions$AMP_score))) +
facet_wrap(~ factor(gender, levels = facet_order), scales = "fixed") +
labs( x = "AMP_score", y = "Frequency") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw() +
guides(fill = FALSE)
histogramplot_AMP_1
violin_AMP_1<-ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_violin(alpha = 0.8) +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order_1, labels=facet_labels_1)+
theme_bw()  +
guides(fill = FALSE) +
labs( x = "Gender", y = "AMP score")
violin_AMP_1
raincloudplot_AMP <- ggplot(data_processed_after_exclusions, aes(x = gender, y = AMP_score, fill = gender)) +
geom_rain(alpha = 0.8) +
scale_fill_manual(values = dark2_colors) +
labs( x = "Gender", y = "AMP_score") +
scale_fill_manual(values = dark2_colors, name = "Gender", breaks = facet_order, labels=legend_labels)+
scale_x_discrete(name = "gender",labels = legend_labels) +
coord_flip()+
guides(fill = FALSE) +
theme_bw()
# Assumption from plots: AMP Score is approx. normally distributed, plus we have a sample size > 30, so that the t-test can be performed
# Using the t-test to see if AMP_score are different between men and woman
# Both tests confirm the non-normal distribution
# Perform a t-test
t_test_result <- t.test(AMP_score ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'))
report(t_test_result)
# Results suggest there is no significant difference in AMP scores between male and female
# Shapiro-Wilk Test for normal distribution (male)
print(shapiro.test(subset(data_processed_after_exclusions, gender=='male')$AMP_score))
# Shapiro-Wilk Test for normal distribution (female)
print(shapiro.test(subset(data_processed_after_exclusions, gender=='female')$AMP_score))
# Wilcoxon rank-sum test
wilcox_test_result <- wilcox.test(AMP_score ~ gender, data = subset(data_processed_after_exclusions, gender!='nonbinary'), exact=FALSE)
wilcox_test_result
combineplot<-histogramplot_AMP_1/violin_AMP_1/raincloudplot_AMP
combineplot<-((histogramplot_AMP_1 / violin_AMP_1)|raincloudplot_AMP)+plot_annotation(title = 'The surprising story about mtcars')
#or
#combineplot<-grid.arrange(histogramplot_AMP_1,violin_AMP_1,raincloudplot_AMP, ncol = 1)
combineplot
dir.create("../plot/")
ggsave("../plot/combineplot.png",dpi = 300,combineplot)
ggsave("../plot/combineplot.pdf",dpi = 300,combineplot)
#or as the other plots
ggsave("../code/analysis_files/figure-html/combineplot.png",dpi = 300,combineplot)
ggsave("../code/analysis_files/figure-html/combineplot.pdf",dpi = 300,combineplot)
sessionInfo()
